#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "V4_aeroporti.h"
#include "V4_voli.h"

typedef struct {
  int h, m;
} orario_t;

typedef struct volo_s {
  struct {
    int idCitta; /* indice in tabella aeroporti */
    orario_t ora;
  } partenza, arrivo;
  char codiceVolo[M2];  
} volo_t;

struct voli_s {
  volo_t *elenco;
  int nv, nmax;
};

int numVoli(voli_t *voli) {
  return voli->nv;
}

voli_t *allocaVoli (int max) {
  voli_t *vp = malloc(sizeof(voli_t));
  vp->nmax = max;
  vp->nv = 0;
  vp->elenco = malloc(max*sizeof(volo_t));
  return vp;
}

void liberaVoli (voli_t *vp) {
  free (vp->elenco);
  free (vp);
}

static orario_t leggiOra (FILE *fp) {
  orario_t ora;
  fscanf(fp,"%d:%d", &ora.h, &ora.m);
  return ora;
}

int greaterOra (voli_t *tabV, int id1, int id2, int partenza) {
  /* puntatori usati per semplficare le espressioni */
  volo_t *v1, *v2; 
  v1 = &(tabV->elenco[id1]);
  v2 = &(tabV->elenco[id2]);
  if (partenza) 
    if (v1->partenza.ora.h != v2->partenza.ora.h) 
      return (v1->partenza.ora.h > v2->partenza.ora.h);
    else 
      return (v1->partenza.ora.m > v2->partenza.ora.m);
  else 
    if (v1->arrivo.ora.h != v2->arrivo.ora.h) 
      return (v1->arrivo.ora.h > v2->arrivo.ora.h);
    else 
      return (v1->arrivo.ora.m > v2->arrivo.ora.m);
}

voli_t *leggiVoli (char *nomeFile, aeroporti_t *aeroporti) {
  voli_t *voli;
  int i, nv;
  char codice1[M2], codice2[M2];
  FILE *f = fopen(nomeFile,"r");
  if (f==NULL) return NULL;
  fscanf(f, "%d",&nv);
  voli = allocaVoli(nv);
  for (i=0; i<nv; i++) {
    fscanf(f, "%s%s%s", codice1, codice2, voli->elenco[i].codiceVolo);
    voli->elenco[i].partenza.idCitta = cercaAeroportoC(aeroporti,codice1);
    voli->elenco[i].arrivo.idCitta = cercaAeroportoC(aeroporti,codice2);
    voli->elenco[i].partenza.ora = leggiOra(f);
    voli->elenco[i].arrivo.ora = leggiOra(f);
  }
  voli->nv = nv;
  fclose(f);
  return voli;
}

void scriviVolo (FILE *f, aeroporti_t *aeroporti, voli_t *voli, int id) {
  volo_t *vp = &(voli->elenco[id]);
  fprintf(f, "%s %s %-6s %02d:%02d %02d:%02d\n", 
	  codiceAeroporto(aeroporti,vp->partenza.idCitta),
	  codiceAeroporto(aeroporti,vp->arrivo.idCitta),
	  vp->codiceVolo,
	  vp->partenza.ora.h,
	  vp->partenza.ora.m,
	  vp->arrivo.ora.h,
	  vp->arrivo.ora.m
	  );
}

void scriviVoli (char *nomeFile, aeroporti_t *aeroporti, voli_t *voli) {
  int i;
  FILE *f;
  if (strcmp(nomeFile,"stdout")==0)
    f = stdout;
  else
    f = fopen(nomeFile,"w");

  if (f==NULL) return;
  fprintf(f, "%d\n",voli->nv);
  for (i=0; i<voli->nv; i++)
    scriviVolo(f,aeroporti,voli,i);

  if (strcmp(nomeFile,"stdout")!=0)
    fclose(f);
}

int voloAeroporto(voli_t *voli, int idVolo, int partenza) {
  if (partenza)
    return voli->elenco[idVolo].partenza.idCitta;
  else 
    return voli->elenco[idVolo].arrivo.idCitta;
}
